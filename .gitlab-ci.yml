stages:
    - build
    - release
    - deploy

variables:
    CONTAINER_RELEASE_IMAGE_BASE: $CI_REGISTRY/images/k-search-engine
    GIT_SUBMODULE_STRATEGY: normal

before_script:
  - git submodule sync
  - git submodule update --init

build:
    stage: build
    tags:
        - dind
    script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker build -t $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME//\//-} .
        - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME//\//-}

push_master:
    stage: release
    tags:
        - shell
    script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME//\//-}
        - docker login -u $REGISTRY_RELEASE_USERNAME -p $REGISTRY_RELEASE_PASSWORD $CI_REGISTRY
        - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME//\//-} "$CONTAINER_RELEASE_IMAGE_BASE:latest"
        - docker push "$CONTAINER_RELEASE_IMAGE_BASE:latest"
    only:
        - master

push_tags:
    stage: release
    tags:
        - shell
    script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME//\//-}
        - docker login -u $REGISTRY_RELEASE_USERNAME -p $REGISTRY_RELEASE_PASSWORD $CI_REGISTRY
        - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME//\//-} "$CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME/v/}"
        - docker push "$CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME/v/}"
    only:
        - tags

deploy_test_slmtj:
  environment: Integration
  when: manual
  stage: deploy
  tags:
    - shell
    - deploy
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME/v/}
    - cd ${INTEGRATION_DOCKER_FOLDER}
    - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_NAME/v/} $INTEGRATION_DOCKER_IMAGE
    - docker-compose down && docker-compose up -d

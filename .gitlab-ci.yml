stages:
  - lint
  - build
  - release
  - deploy

variables:
  CONTAINER_RELEASE_IMAGE_BASE: $CI_REGISTRY/images/k-search-engine
  GIT_SUBMODULE_STRATEGY: normal

before_script:
  - export IMAGE_TAG="${CI_COMMIT_REF_NAME#v}_${CI_COMMIT_SHA:0:10}"
  - export CLEANED_CI_COMMIT_REF_NAME="${CI_COMMIT_REF_NAME#v}"
  - echo $IMAGE_TAG

test-shell-syntax:
  stage: lint
  image: "koalaman/shellcheck-alpine:latest"
  script:
    - shellcheck ./start.sh
  tags:
    - docker

build:
  stage: build
  tags:
    - dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:${IMAGE_TAG} .
    - docker tag $CI_REGISTRY_IMAGE:${IMAGE_TAG} "k-search-engine"
    - docker-compose -f ./tests/docker-compose.test.yml up -d
    - sleep 5 # wait for 5 seconds, this should be enough to see startup log entries
    - docker-compose -f ./tests/docker-compose.test.yml logs &> docker_output.log
    - docker-compose -f ./tests/docker-compose.test.yml down
    - grep -c "Welcome to Apache Solr" docker_output.log
    - grep -c "/opt/solr/k-search" docker_output.log
    - docker push $CI_REGISTRY_IMAGE:${IMAGE_TAG}

push_tags:
  stage: release
  tags:
    - shell
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:${IMAGE_TAG}
    - docker login -u $REGISTRY_RELEASE_USERNAME -p $REGISTRY_RELEASE_PASSWORD $CI_REGISTRY
    - docker tag $CI_REGISTRY_IMAGE:${IMAGE_TAG} "$CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v}"
    - docker tag $CI_REGISTRY_IMAGE:${IMAGE_TAG} "$CONTAINER_RELEASE_IMAGE_BASE:latest"
    - docker push "$CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v}"
    - docker push "$CONTAINER_RELEASE_IMAGE_BASE:latest"
    - docker rmi "$CONTAINER_RELEASE_IMAGE_BASE:${CI_COMMIT_REF_NAME#v}"
    - docker rmi "$CONTAINER_RELEASE_IMAGE_BASE:latest"
  only:
    - tags

## Deploy on canary environments
.canary_deploy: &canary_deploy
  when: manual
  stage: deploy
  tags:
    - shell
    - deploy
  script:
    - DEPLOY_TAG=$([ -z "${CI_COMMIT_TAG}" ] && echo "${IMAGE_TAG}" || echo "${CLEANED_CI_COMMIT_REF_NAME}")
    - DEPLOY_REGISTRY=$([ -z "${CI_COMMIT_TAG}" ] && echo "${CI_REGISTRY_IMAGE}" || echo "${CONTAINER_RELEASE_IMAGE_BASE}")
    - echo "Deploying ${DEPLOY_REGISTRY} - ${DEPLOY_TAG}..."
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $DEPLOY_REGISTRY:${DEPLOY_TAG}
    - cd $DEPLOY_FOLDER
    - docker tag $DEPLOY_REGISTRY:${DEPLOY_TAG} $DEPLOY_IMAGE
    - docker-compose down -v && docker-compose up -d

canary_manfred_deploy:
  <<: *canary_deploy
  environment: "Canary Manfred"
  variables:
    DEPLOY_FOLDER: $CANARY_M_FOLDER
    DEPLOY_IMAGE: $CANARY_M_IMAGE

canary_filomena_deploy:
  <<: *canary_deploy
  environment: "Canary Filomena"
  variables:
    DEPLOY_FOLDER: $CANARY_F_FOLDER
    DEPLOY_IMAGE: $CANARY_F_IMAGE

canary_try_deploy:
  <<: *canary_deploy
  environment: "Staging on try.kbox.net"
  variables:
    DEPLOY_FOLDER: $STAGING_T_FOLDER
    DEPLOY_IMAGE: $STAGING_T_IMAGE
  only:
    - tags
